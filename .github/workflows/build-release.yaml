name: Build and Deploy

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      validate_only:
        description: 'Run validation only?'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      zip-name: ${{ steps.set-zip.outputs.zip-name }}
      validate_only: ${{ env.validate_only }}
    env:
      validate_only: ${{ github.event.inputs.validate_only || 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set validate_only environment variable (pull_request/push)
        if: github.event_name != 'workflow_dispatch'
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "validate_only=false" >> $GITHUB_ENV
          else
            echo "validate_only=true" >> $GITHUB_ENV
          fi

      - name: Report validate_only value
        run: |
          echo "validate_only is set to: $validate_only"
          if [[ "${validate_only}" == "false" ]]; then
            echo "The code will be build and deploy"
          fi

      - name: Set zip file name
        id: set-zip
        run: |
          ZIP_NAME="${{ github.event.repository.name }}-${{ github.run_id }}.zip"
          echo "zip-name=$ZIP_NAME" >> $GITHUB_OUTPUT

      - name: Create dummy files and zip them
        run: |
          mkdir temp-files
          echo "Hello from file 1" > temp-files/file1.txt
          echo "Another dummy file" > temp-files/file2.txt
          touch temp-files/empty.txt
          zip -r "${{ steps.set-zip.outputs.zip-name }}" temp-files
          ls -lh "${{ steps.set-zip.outputs.zip-name }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: source-zip
          path: ${{ steps.set-zip.outputs.zip-name }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.validate_only == 'false'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: source-zip
          path: .

      - name: Inspect zip
        run: |
          ZIP_NAME="${{ needs.build.outputs.zip-name }}"
          echo "Inspecting deploy zip: $ZIP_NAME"
          unzip -l "$ZIP_NAME"
          exit 1
