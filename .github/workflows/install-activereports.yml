name: Install ActiveReports MSI

on:
  # Trigger workflow manually (you can adjust triggers as needed, e.g., `push` or `pull_request`)
  workflow_dispatch:

jobs:
  install-activereports:
    runs-on: windows-latest # GitHub Runner needs to be Windows to run MSI files

    steps:
      # Step 1: Checkout the code (optional, if code is used in the workflow)
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Download the MSI file
      - name: Download MSI file
        run: |
          $msiUrl = "https://cdn.grapecity.com/ActiveReports/ar16/ActiveReports-v16.4.1.msi"
          $msiFilePath = "$env:Temp\ActiveReports-v16.4.1.msi"
          Invoke-WebRequest -Uri $msiUrl -OutFile $msiFilePath
        shell: powershell

      # Step 3: Install the MSI file silently
      - name: Install MSI file
        run: |
          $msiFilePath = "$env:Temp\ActiveReports-v16.4.1.msi"
          Start-Process -FilePath msiexec.exe -ArgumentList "/i `"$msiFilePath`" /quiet /norestart" -Wait
        shell: powershell

      - name: Activate GrapeCity License Manager
        shell: pwsh  # Use PowerShell
        env:
          ACTIVATION_KEY: ${{ secrets.ACTIVATION_KEY }}  # Reference the secret
        run: |
          # Invoke the GrapeCity License Manager with activation arguments
          Start-Process -FilePath "C:\ProgramData\GrapeCity\gclm\gclm.exe" `
            -ArgumentList "5e0b5f44-1a6b-4aff-a007-17b9224bca83 -a $env:ACTIVATION_KEY" `
            -NoNewWindow -Wait
      
      # Step 4: Verify installation
      - name: Verify Installation
        run: |
          try {
              Write-Host "Verifying installation of ActiveReports..." -ForegroundColor Cyan
              
              # Verify if GrapeCity ActiveReports is installed
              $software = Get-WmiObject -Class Win32_Product | Where-Object { $_.Name -like "*GrapeCity ActiveReports*" }
              
              if ($software) {
                  Write-Host "ActiveReports is installed successfully!" -ForegroundColor Green
                  Write-Host "Installed Software Details:" -ForegroundColor Green
                  $software | ForEach-Object { Write-Output "Name: $($_.Name), Version: $($_.Version), Vendor: $($_.Vendor)" }
              } else {
                  Write-Host "ActiveReports installation failed or is not installed." -ForegroundColor Red
                  exit 1 # Exit with an error code to fail the GitHub Action
              }
          }
          catch {
              Write-Host "An error occurred during the installation verification process." -ForegroundColor Red
              Write-Host "Error: $_" -ForegroundColor Red
              exit 1 # Exit with an error code to fail the GitHub Action
          }
        shell: powershell
